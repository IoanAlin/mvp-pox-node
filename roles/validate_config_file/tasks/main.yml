---

- name: Get config file
  command: cat {{ config_file_name }}
  check_mode: no
  register: config_file_output

- name: Create map from string
  set_fact:
    config_file_map: "{{ dict(_keys|zip(_vals)) }}"
  vars:
    _arr: "{{ config_file_output.stdout.split('\n')|map('trim')|select()|list }}"
    _keys: "{{ _arr|map('regex_replace', '^(.*?)=(.*)$', '\\1')|map('trim')|list }}"
    _vals: "{{ _arr|map('regex_replace', '^(.*?)=(.*)$', '\\2')|map('trim')|list }}"
  failed_when: config_file_map.ADDRESS is undefined or config_file_map.RESULT_ADDRESS is undefined or config_file_map.PRIVATE_KEY is undefined or config_file_map.RESULT_PRIVATE_KEY is undefined

- name: Post to bloxberg
  uri:
    url: https://blockexplorer.bloxberg.org/api?module=account&action=balance&address={{ config_file_map.ADDRESS }}
    method: GET
    headers:
      Content-Type: "application/json"
  register: result
  retries: 64
  delay: 3


- name: Validate config file
  debug:
    msg: "Result address must be different than the node address. Try a different address..."
  when: config_file_map.ADDRESS == config_file_map.RESULT_ADDRESS

- name: Validate config file
  debug:
    msg: "Result private key must be different than the node private key. Try a different private key..."
  when: config_file_map.PRIVATE_KEY == config_file_map.RESULT_PRIVATE_KEY

- name: Get error message
  debug:
    msg: "{{ result.json.message }}"
  failed_when: result.json.message != "OK"
  when: result.json.message is defined

- name: Get account balance
  debug:
    msg: "Balance: '{{ result.json.result|int / 1000000000000000000 }}' bergs. If balance is 0 then please get bergs from https://faucet.bloxberg.org/ and run the installer again."
  failed_when:
  when: 
    - result.json.result is defined
    - result.json.result == '0'

- meta: end_play
  when: (result.json.result is defined and result.json.result == '0') or (config_file_map.PRIVATE_KEY == config_file_map.RESULT_PRIVATE_KEY) or (config_file_map.ADDRESS == config_file_map.RESULT_ADDRESS)






